<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="FPS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>